{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employees/employee-list/employee-list.component.css","webpack:///./src/app/employees/employee-list/employee-list.component.html","webpack:///./src/app/employees/employee-list/employee-list.component.ts","webpack:///./src/app/employees/employee/employee.component.css","webpack:///./src/app/employees/employee/employee.component.html","webpack:///./src/app/employees/employee/employee.component.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/employees/shared/employee.model.ts","webpack:///./src/app/employees/shared/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <app-employees></app-employees>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularfirebase';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { FormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    EmployeeComponent,\n    EmployeeListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    FormsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/*Empty*/\"","module.exports = \"<h6 class=\\\"text-center\\\">Employee Register</h6><br/>\\n<table class=\\\"table table-sm table-hover\\\">\\n  <tr *ngFor=\\\"let employee of employeeList\\\">\\n      <td>{{employee.name}}</td>\\n      <td>{{employee.position}}</td>\\n      <td>\\n        <a class=\\\"btn\\\" (click)=\\\"onEdit(employee)\\\">\\n          <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n        </a>\\n        <a class=\\\"btn\\\" (click)=\\\"onDelete(employee.$key)\\\">\\n          <i class=\\\"fa fa-trash-o\\\"></i>\\n        </a>\\n      </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from '../shared/employee.service';\nimport { Employee } from '../shared/employee.model';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  employeeList: Employee[];\n  constructor(private employeeService: EmployeeService, private tostr: ToastrService) { }\n\n  ngOnInit() {\n    const x = this.employeeService.getData();\n    x.snapshotChanges().subscribe(item => {\n      this.employeeList = [];\n      item.forEach(element => {\n        const y = element.payload.toJSON();\n        y['$key'] = element.key;\n        this.employeeList.push(y as Employee);\n      });\n    });\n  }\n\n  onEdit(emp: Employee) {\n    this.employeeService.selectedEmployee = Object.assign({}, emp);\n  }\n\n  onDelete(key: string) {\n    if (confirm('Are you sure to delete this record ?') === true) {\n      this.employeeService.deleteEmployee(key);\n      this.tostr.warning('Deleted Successfully', 'Employee register');\n    }\n  }\n\n}\n","module.exports = \"/*Empty*/\"","module.exports = \"<form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(employeeForm)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"$key\\\" #$key=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.$key\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.name\\\" placeholder=\\\"Full Name\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Position</label>\\n    <input class=\\\"form-control\\\" name=\\\"position\\\" #position=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.position\\\" placeholder=\\\"Position\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Office</label>\\n    <input class=\\\"form-control\\\" name=\\\"office\\\" #office=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.office\\\" placeholder=\\\"Office\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Salary</label>\\n    <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-addon\\\">\\n          <i class=\\\"fa fa-dollar\\\"></i>\\n        </div>\\n        <input class=\\\"form-control\\\" name=\\\"salary\\\" #salary=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.salary\\\" placeholder=\\\"Salary\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" [disabled]=\\\"!employeeForm.valid\\\">\\n      <i class=\\\"fa fa-floppy-o\\\"></i>\\n       Submit</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"resetForm(employeeForm)\\\">\\n      <i class=\\\"fa fa-repeat\\\"></i>\\n       Reset</button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { EmployeeService } from '../shared/employee.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService, private tostr: ToastrService) { }\n\n  ngOnInit() {\n\n    this.resetForm();\n  }\n\n  onSubmit(employeeForm: NgForm) {\n    if (employeeForm.value.$key == null) {\n      this.employeeService.insertEmployee(employeeForm.value);\n    } else {\n      this.employeeService.updateEmployee(employeeForm.value);\n    }\n    this.resetForm(employeeForm);\n    this.tostr.success('Submitted Succcessfully', 'Employee Register');\n  }\n\n  resetForm(employeeForm?: NgForm) {\n    if (employeeForm != null) {\n      employeeForm.reset();\n    }\n    this.employeeService.selectedEmployee = {\n      $key: null,\n      name: '',\n      position: '',\n      office: '',\n      salary: 0,\n    };\n  }\n\n}\n","module.exports = \"/*Empty*/\"","module.exports = \"<div class=\\\"text-center\\\">\\n  <h2 class=\\\"jumbotron\\\">Employee Register</h2>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7\\\">\\n    <app-employee></app-employee>\\n  </div>\\n  <div class=\\\"col-md-5\\\">\\n    <app-employee-list></app-employee-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from './shared/employee.service';\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n  providers : [EmployeeService]\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Employee {\n    $key: string;\n    name: string;\n    position: string;\n    office: string;\n    salary: number;\n}\n","import { Injectable } from '@angular/core';\n\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Employee} from './employee.model';\n@Injectable()\nexport class EmployeeService {\n  employeeList: AngularFireList<any>;\n  selectedEmployee: Employee = new Employee();\n  constructor(private firebase: AngularFireDatabase ) { }\n\n  getData() {\n    this.employeeList = this.firebase.list('employees');\n    return this.employeeList;\n  }\n\n  insertEmployee(employee: Employee) {\n    this.employeeList.push({\n      name: employee.name,\n      position: employee.position,\n      office: employee.office,\n      salary: employee.salary\n    });\n  }\n\n  updateEmployee(employee: Employee) {\n    this.employeeList.update(employee.$key,\n      {\n        name: employee.name,\n        position: employee.position,\n        office: employee.office,\n        salary: employee.salary\n      });\n  }\n\n  deleteEmployee($key: string) {\n    this.employeeList.remove($key);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: 'AIzaSyAxjyIO-wKChe2ApAJ6H1H4KsegUTrpEGM',\n    authDomain: 'snehamirra27.firebaseapp.com',\n    databaseURL: 'https://snehamirra27.firebaseio.com',\n    projectId: 'snehamirra27',\n    storageBucket: 'snehamirra27.appspot.com',\n    messagingSenderId: '581948687186'\n  }\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}